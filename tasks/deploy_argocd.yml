---

- name: Create Argo CD namespace
  community.kubernetes.k8s:
     state: present
     kind: Namespace
     name: "{{ argocd_namespace }}"

- name: Create Argo CD::Operator Group
  community.kubernetes.k8s:
    state: present
    namespace: "{{ argocd_namespace }}"
    definition: "{{ lookup('template','argocd/operator-group.yaml.j2') | from_yaml  }}"
    wait: yes

- name: Install Operator::Argo CD
  community.kubernetes.k8s:
    state: present
    namespace: "{{ argocd_namespace }}"
    definition: "{{ lookup('template','argocd/subscription.yaml.j2') | from_yaml  }}"
    wait: yes

- name: Wait for Argo CD Operator
  include_tasks: utils/wait_for_operator_and_sub.yml
  vars:
    subscription_name: argocd-operator
    sub_namespace: "{{ argocd_namespace }}"

- name: Create Argo CD
  community.kubernetes.k8s:
    state: present
    namespace: "{{ argocd_namespace }}"
    definition: "{{ item | from_yaml }}"
    wait: no
  with_file:
   - "{{ argocd_cr }}"

- name: Get Argo CD Name
  set_fact:
    argocd_cr: "{{ item | from_yaml }}"
  no_log: yes
  with_file:
  -  "{{ argocd_cr }}"

- name: Waiting for Argo CD components to be running
  community.kubernetes.k8s_info:
    api_version: argoproj.io/v1alpha1
    kind: ArgoCD
    namespace: "{{ argocd_namespace }}"
    name: "{{ argocd_cr.metadata.name }}"
  register: argocd_status
  retries: 18
  delay: 10
  until: argocd_status.resources and argocd_status.resources[0].status and argocd_status.resources[0].status.phase == 'Available'

- name: Create Argocd Admins Group
  community.kubernetes.k8s:
    state: present
    definition: |-
      apiVersion: user.openshift.io/v1
      kind: Group
      metadata:
        name: argocd-admins
      users: []
